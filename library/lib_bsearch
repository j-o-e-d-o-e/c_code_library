lib->bsearch



- binary search defined in [stdlib.h]
- bsearch(const void *key, const void *base, size_t n, size_t size, (*comp))
    - key: pointer to val to be searched for
    - base: pointer to the beginning of array to be searched
    - n: number of items to be searched
    - size: size of data type
    - comp: pointer-to-func to compare two elems
        - returns positive int (if 1st item follows 2nd item), 0 (same) or neg int
    - if key is found in base, returns pointer to matching member
        - if multiple matches, returned element is unspecified
        - if no match is found, returns NULL

- SEE ALSO
    - modern, lvl.2.11.4
    - tutorialspoint.com/c_standard_library/c_function_bsearch

EXAMPLE
#define LEN 5
int comp(const void *a, const void *b) {
    return (*(int *) a - *(int *) b);
}

int main(void) {
    int key = 32;
    int base[] = {5, 20, 29, 32, 63};
    int *item = bsearch(&key, base, LEN, sizeof(int), comp);
    if (item != NULL) printf("Found: %d\n", *item);   // Found: 32
}
