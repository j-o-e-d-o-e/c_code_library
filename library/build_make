build->Make

tutorialspoint.com/makefile

- file-name: Makefile
- Make creates automatically object-files (built-in), e.g.
	- `make main.o` executes: cc -c -o main.o main.c
- comments: #
- indentation: tabs required (not spaces)
- Error: Makefile:<LINE>: message
- Make tracks changes upon timestamp of files
	- therefore, if Make does not detect changes, use `touch <filename>` to set new timestamp
- help: man make OR make -h

targets
	<target>: <dependencies>
		<commands>
		- if <dependencies> change, run <commands>
	- build all (common), e.g.
		all: dump1090 view1090
	- clean project: delete exec, etc.(common)
		clean:
			rm -f *.o lib
	- build any object-file from its source-file (built-in)
		.c.o:
			$(CC) $(CFLAGS) -c $< # alternatively: $(CC) $(CFLAGS) -c $*.c
	- build any exec from its source-file
		.c:
			$(CC) $(CFLAGS) $@.c -o $@
macros
	- $(CC): compiler, e.g. CC=gcc (predefined)
	- $(CFLAGS): args given to compiler, e.g. CFLAGS=-O -systype bsd43
		- predefined: defaults to empty string
	- $(LIBS): libraries to be included, e.g. LIBS="-lncurses -lm -lsdl"
	- $@: name of file to be made
	- $?: names of changed dependents
	- $<: name of the related file that caused the action
	- $*: prefix shared by target and dependent files

conditional directives
	- ifdef <macro>
	- ifndef <macro>
	- else
	- ifeq (<macro1>,<macro2>)
	- ifneq (<macro1>,<macro2>)
	- endif: every conditional must end with an endif

EXAMPLE
all: main.o utils.o
	$(CC) main.o utils.o -o code-library
lib: main.o utils.o
	$(CC) main.o utils.o -o $@
clean:
	rm -f *.o lib
