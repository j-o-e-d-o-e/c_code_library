string->output

I/O

(1) printf(const char *format, ...)
    - format: pointer to string
    - format-specifiers
        - %p: addresses
        - %s: strings
        - %d: ints
        - %f: float/double
        - %g: float/double
        - %c: chars
(2) puts(const char *s) [stdio.h]
    - s: pointer to string
    - appends newline to s
        - like printf("%s\n", words)
    - stops printing when it encounters \0
(3) fputs(const char *s, FILE *stream) [stdio.h]
    - s: pointer to string (buffer)
    - stream: file to write to
        - e.g. stdout (for standard output) [stdio.h]
    - designed for file output
    - does not append a newline

- SEE ALSO
    - primer, ch.11
    - modern, lvl.1.8.3

EXAMPLE
(1)
char name[10] = "Joe Doe";
// Joe Doe, 0x7ffc90728ad0, 7, J
printf("%s, %p, %d, %c\n", name, &name, (int) strlen(name), *name);

(2)
const char *name = "Joe Doe";
puts(name);     // Joe Doe
puts(name + 4); // Doe

(3)
fputs(&"Joe Doe"[1], stdout);
